(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{323:function(t,e,a){t.exports=a.p+"assets/img/wechat_qrcode.c0c8a471.png"},543:function(t,e,a){t.exports=a.p+"assets/img/Untitled.78b89496.png"},694:function(t,e,a){"use strict";a.r(e);var s=a(5),n=Object(s.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[t._v("最近几个用户给我反馈说打开"),e("a",{attrs:{href:"https://apps.apple.com/cn/app/%E5%A4%8D%E5%88%B6%E6%9D%BF-%E5%B8%AE%E4%BD%A0%E5%BF%AB%E9%80%9F%E8%BE%93%E5%85%A5%E6%96%87%E5%AD%97%E6%A8%A1%E6%9D%BF%E5%92%8C%E5%B8%B8%E7%94%A8%E8%AF%AD/id1595266857",target:"_blank",rel:"noopener noreferrer"}},[t._v("复制板"),e("OutboundLink")],1),t._v("键盘拓展后，每次切出应用再切回来，键盘高度都会变高一些，我在我的 iPhone12 iOS17 上试了试确实如此。")]),t._v(" "),e("p",[t._v("在网上搜了一下之后，发现也有相关的反馈，")]),t._v(" "),e("ol",[e("li",[e("a",{attrs:{href:"https://developer.apple.com/forums/thread/738465?login=true",target:"_blank",rel:"noopener noreferrer"}},[t._v("Custom Keyboard Extension Keeps Increasing In Height"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://stackoverflow.com/questions/71809342/ios-custom-keyboard-height-increases-on-every-switch",target:"_blank",rel:"noopener noreferrer"}},[t._v("iOS custom keyboard height increases on every switch"),e("OutboundLink")],1)])]),t._v(" "),e("p",[t._v("但是并没有人给出合适的解决方案，倒是推荐用 SwiftUI 去重新实现一下，我还不想重写，所以想着有没有什么办法在当前方案上解决这个问题。")]),t._v(" "),e("h2",{attrs:{id:"当前方案介绍"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#当前方案介绍"}},[t._v("#")]),t._v(" 当前方案介绍")]),t._v(" "),e("p",[t._v("基本思路是使用 iOS 提供的自定义键盘拓展方式，这也是在 iOS 上实现跨应用自定义键盘的唯一方式。官方文档 "),e("a",{attrs:{href:"https://developer.apple.com/documentation/uikit/keyboards_and_input/creating_a_custom_keyboard/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Creating a custom keyboard"),e("OutboundLink")],1),t._v("。")]),t._v(" "),e("p",[t._v("具体来说是通过继承系统提供的 "),e("code",[t._v("UIInputViewController")]),t._v(" 类来提供键盘交互界面，然后在自定义的键盘交互界面里进行布局。键盘拓展的数据和主应用的数据是可以共享的，配置 AppGroup 就能实现。而具体的对输入框中文字操作的方法是通过 "),e("code",[t._v("UIInputViewController")]),t._v(" 的 "),e("code",[t._v("textDocumentProxy")]),t._v(" 实例来进行。")]),t._v(" "),e("p",[e("img",{attrs:{src:a(543),alt:"Untitled"}})]),t._v(" "),e("h2",{attrs:{id:"解决思路"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#解决思路"}},[t._v("#")]),t._v(" 解决思路")]),t._v(" "),e("p",[t._v("回到这里的问题，键盘高度是如何控制的？官方文档 "),e("a",{attrs:{href:"https://developer.apple.com/documentation/uikit/keyboards_and_input/creating_a_custom_keyboard/configuring_a_custom_keyboard_interface",target:"_blank",rel:"noopener noreferrer"}},[t._v("Configuring a custom keyboard interface"),e("OutboundLink")],1),t._v(" 也有相关介绍如下，里面提到的关于自定义键盘的高度可以通过向 "),e("code",[t._v("UIInputViewController")]),t._v(" 的 view 属性添加自动约束布局(AutoLayout)的方式来实现。")]),t._v(" "),e("blockquote",[e("p",[t._v("By default, iOS sizes custom keyboards to match the system keyboard according to screen size and device orientation. A custom keyboard’s width is always set by the system, typically matching the screen width. You can adjust the height of your custom keyboard’s primary view using Auto Layout. To change a keyboard’s height, adjust the height constraints on the UIInputViewController’s view to achieve the desired height for your interface.")])]),t._v(" "),e("p",[t._v("在官方的这篇 "),e("a",{attrs:{href:"https://developer.apple.com/library/archive/documentation/General/Conceptual/ExtensibilityPG/CustomKeyboard.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("App Extension Programming Guide → Custom Keyboard"),e("OutboundLink")],1),t._v("  文档里甚至给出了具体的代码实现")]),t._v(" "),e("div",{staticClass:"language-java extra-class"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CGFloat")]),t._v(" _expandedHeight "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NSLayoutConstraint")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("_heightConstraint "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" \n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NSLayoutConstraint")]),t._v(" constraintWithItem"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" self"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("view \n                                 attribute"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NSLayoutAttributeHeight")]),t._v(" \n                                 relatedBy"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NSLayoutRelationEqual")]),t._v(" \n                                    toItem"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" nil \n                                 attribute"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NSLayoutAttributeNotAnAttribute")]),t._v(" \n                                multiplier"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(" \n                                  constant"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" _expandedHeight"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("self"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("view addConstraint"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" _heightConstraint"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("不过我在工程中设置了类似的代码也没有阻止键盘越变越高。")]),t._v(" "),e("blockquote",[e("p",[t._v('PS: 我在调试键盘拓展的时候，总是没办法 attach 到键盘拓展的 process，报错 → Could not attach to pid: "xxx", attach failed (Not allowed to attach to process. Look in the console messages (Console.app), near the debugserver entries, when the attach failed. The subsystem that denied the attach permission will likely have logged an informative message about why it was denied.)  在公司改了好久都不行，回家之后用家里的电脑调试同样的工程就能正常 attach process… 服了..')])]),t._v(" "),e("p",[t._v("为了排除别的可能得问题，我新建了一个空的自定义键盘拓展工程去调试，发现空的键盘拓展也是会出现键盘高度越变越高的问题… 感觉是苹果的系统出问题了..")]),t._v(" "),e("p",[t._v("不过还是不死心，我之前设置的视图高度约束是放在 "),e("code",[t._v("UIViewController")]),t._v(" 的 "),e("code",[t._v("viewDidLoad")]),t._v(" 方法中的，"),e("code",[t._v("UIViewController")]),t._v(" 还有一个 "),e("code",[t._v("updateViewConstraints")]),t._v(" 方法，这个方法的执行时机是视图控制器的视图需要更新约束的时候，应该是在布局相关的方法执行之前执行。")]),t._v(" "),e("p",[t._v("所以我把约束的代码调整到这个方法里，重新调试发现问题解决了。")]),t._v(" "),e("div",{staticClass:"language-swift extra-class"},[e("pre",{pre:!0,attrs:{class:"language-swift"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("updateViewConstraints")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" desiredHeight"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CGFloat")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("305")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" heightContraint "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NSLayoutConstraint")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        item"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" view"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        attribute"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("height"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        relatedBy"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("equal"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        toItem"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token nil constant"}},[t._v("nil")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        attribute"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("notAnAttribute"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        multiplier"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        constant"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" desiredHeight"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    view"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("addConstraint")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("heightContraint"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("updateViewConstraints")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("感觉是系统可能在每次切回应用的时候让视图约束失效导致高度不断变化，目测应该是 iOS 系统更新引起的问题。先就这样吧，以后再遇到问题再说。")]),t._v(" "),e("p",[t._v("参考地址:")]),t._v(" "),e("ol",[e("li",[e("a",{attrs:{href:"https://developer.apple.com/documentation/uikit/keyboards_and_input/creating_a_custom_keyboard/",target:"_blank",rel:"noopener noreferrer"}},[t._v("UIKit - Creating a custom keyboard"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://developer.apple.com/forums/thread/694700",target:"_blank",rel:"noopener noreferrer"}},[t._v("Attach process failed when trying to run intents extension via Xcode"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://developer.apple.com/forums/thread/132797",target:"_blank",rel:"noopener noreferrer"}},[t._v('Cannot debug Catalyst App: "Message from debugger: Process attach denied”'),e("OutboundLink")],1)])]),t._v(" "),e("hr"),t._v(" "),e("p",[t._v("关注我的微信公众号，我在上面会分享我的日常所思所想。")]),t._v(" "),e("div",{attrs:{align:"center"}},[e("img",{attrs:{src:a(323),width:"40%/"}})])])}),[],!1,null,null,null);e.default=n.exports}}]);