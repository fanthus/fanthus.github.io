(window.webpackJsonp=window.webpackJsonp||[]).push([[81],{323:function(t,s,a){t.exports=a.p+"assets/img/wechat_qrcode.c0c8a471.png"},688:function(t,s,a){"use strict";a.r(s);var n=a(5),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("一段典型的后端 "),s("code",[t._v("Controller")]),t._v(" 层的代码")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RestController")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HTTPController")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@GetMapping")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"get/params"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HashMap")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("queryData")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RequestParam")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" pageNo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RequestParam")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" pageSize"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pageNo {}, pageSize {}"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pageNo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pageSize"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HashMap")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" info "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HashMap")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        info"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pageNo"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("pageNo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        info"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pageSize"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pageSize"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" info"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("这段代码中涉及到了三个注解的使用  "),s("code",[t._v("@RestController")]),t._v("，"),s("code",[t._v("@GetMapping")]),t._v(", "),s("code",[t._v("@RequestParam")]),t._v("，也分别对应了注解的三个使用层面，类相关注解，方法注解，以及方法参数注解。")]),t._v(" "),s("p",[t._v("这篇文章目的是希望能详细了解三种使用层面上的不同注解，搞清楚不同注解的适用场景。")]),t._v(" "),s("h1",{attrs:{id:"类相关的注解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类相关的注解"}},[t._v("#")]),t._v(" 类相关的注解")]),t._v(" "),s("h2",{attrs:{id:"controller"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#controller"}},[t._v("#")]),t._v(" @Controller")]),t._v(" "),s("p",[s("code",[t._v("@Controller")]),t._v(" 注解"),s("a",{attrs:{href:"https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/stereotype/Controller.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方的解释"),s("OutboundLink")],1),t._v("是，它表示被注解的这个类是一个控制器类（比如声明可以返回 HTTP 响应的 Web 控制器）。")]),t._v(" "),s("p",[t._v("但是如果将类只用 "),s("code",[t._v("@Controller")]),t._v(" 注释的话，访问方法对应的路径还是会报 404 ，这是为什么？因为只使用 "),s("code",[t._v("@Conroller")]),t._v(" ，返回值默认是一个视图名称，Spring 会通过这个视图名称查找相关连的视图来呈现，这个视图配置过程需要单独进行，如果找不到对应视图的话，则会导致 404。")]),t._v(" "),s("p",[t._v("视图配置流程可以参考"),s("a",{attrs:{href:"https://www.cnblogs.com/itdragon/p/7718143.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("这里"),s("OutboundLink")],1),t._v("，这里不再赘述了。")]),t._v(" "),s("p",[t._v("现代的业务开发里前后端都是分离的，一般在和前端对接的时候，后端只需要返回前端需要的数据即可，具体的页面逻辑是前端自己完成的，所以我们想要返回数据应该怎么办呢？")]),t._v(" "),s("p",[t._v("答案是可以增加一个 "),s("code",[t._v("@ResponseBody")]),t._v(" ，这个注解表示方法返回值应绑定到 Web 响应正文。比如下面这个方法里，最终只返回一个字符串：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 控制器部分")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Controller")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@ResponseBody")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HTTPController")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@GetMapping")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"get/pure"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("queryData")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"query"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 网络请求")]),t._v("\ncurl "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://localhost:8083/get/pure"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 响应结果")]),t._v("\nquery\n")])])]),s("h2",{attrs:{id:"restcontroller"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#restcontroller"}},[t._v("#")]),t._v(" @RestController")]),t._v(" "),s("p",[s("code",[t._v("@RestController")]),t._v(" 注解"),s("a",{attrs:{href:"https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/bind/annotation/RestController.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方的解释"),s("OutboundLink")],1),t._v("是，它是  "),s("code",[t._v("@Controller")]),t._v(" 和 "),s("code",[t._v("@ResponseBody")]),t._v(" 的组合的一种简便写法。")]),t._v(" "),s("p",[t._v("像上面的例子中 将 "),s("code",[t._v("@Contoller")]),t._v(" 和 "),s("code",[t._v("@ResponseBody")]),t._v(" 替换为 "),s("code",[t._v("@RestController")]),t._v(" 之后，返回的结果并不会变。")]),t._v(" "),s("p",[s("code",[t._v("@RestController")]),t._v(" 还有一个额外的好处是，如果你返回的是对象、字典或者数组，则返回值会自动变为 JSON 的格式，比如如下方法")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@GetMapping")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"get/person"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PersonResponse")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("queryPerson")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PersonResponse")]),t._v(" personResponse "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PersonResponse")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    personResponse"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fanthus"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    personResponse"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" personResponse"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PersonResponse")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n请求后得到的响应为👇\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"id"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fanthus"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"controller-vs-restcontroller"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#controller-vs-restcontroller"}},[t._v("#")]),t._v(" @Controller VS @RestController")]),t._v(" "),s("p",[s("code",[t._v("@Controller")]),t._v(" 返回一个视图页面，在前后端不分离的年代，经常用到。")]),t._v(" "),s("p",[s("code",[t._v("@RestController")]),t._v(" 是 "),s("code",[t._v("@Contoller")]),t._v(" 和 "),s("code",[t._v("@ResponseBody")]),t._v(" 的组合，它返回普通数据，并将数据写入到 HTTP 响应的 body 中，同时它对于复杂数据会进行序列化。")]),t._v(" "),s("p",[t._v("现在开发里，基本上所有正常返回数据的控制器，都需要增加 "),s("code",[t._v("@RestController")]),t._v(" 这个注解。")]),t._v(" "),s("h1",{attrs:{id:"方法相关注解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法相关注解"}},[t._v("#")]),t._v(" 方法相关注解")]),t._v(" "),s("h2",{attrs:{id:"requestmapping"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#requestmapping"}},[t._v("#")]),t._v(" @RequestMapping")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/bind/annotation/RequestMapping.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("@RequestMapping"),s("OutboundLink")],1),t._v(" 表示将 Web 请求映射到请求处理类中对应方法。")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("@RequestMapping")]),t._v(" 也可以用在类级别上（类似 @Contorlller），不过大部分时候还是用在方法层级上。")])]),t._v(" "),s("p",[t._v("那如何让一个方法表示成是 GET 方法以及指定请求对应路径呢？"),s("code",[t._v("@RequestMapping")]),t._v(" 提供了一系列参数来指定这些 HTTP 请求参数。")]),t._v(" "),s("p",[t._v("参数列表有 "),s("code",[t._v("method")]),t._v(", "),s("code",[t._v("name")]),t._v(", "),s("code",[t._v("value")]),t._v(", "),s("code",[t._v("path")]),t._v(", "),s("code",[t._v("headers")]),t._v(", "),s("code",[t._v("params")]),t._v(", "),s("code",[t._v("produces")]),t._v(", "),s("code",[t._v("consumes")]),t._v(".")]),t._v(" "),s("ol",[s("li",[s("p",[s("code",[t._v("method")]),t._v(" 标识对应的请求方法。最常见的请求方法就是 "),s("code",[t._v("RequestMethod.GET")]),t._v("，"),s("code",[t._v("RequestMethod.POST")]),t._v("。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("value")]),t._v(" 和 "),s("code",[t._v("path")]),t._v(" 都表示 URL 请求路径，这俩可以互相替代。"),s("code",[t._v("value")]),t._v(' 是默认属性，可以省略不写。所以我们常见的这种写法 @RequestMapping("/pets") 其实是省略了参数名的。')]),t._v(" "),s("p",[t._v("而且根据 "),s("a",{attrs:{href:"https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/bind/annotation/RequestMapping.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("@RequestMapping"),s("OutboundLink")],1),t._v(" 的官方文档，可以给这两个参数提供数组，即同一个方法可以匹配多个路径。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("params")]),t._v(" 限制请求参数，比如这种写法 "),s("code",[t._v('@RequestMapping(method = RequestMethod.GET, path = {"/"} , params = {"id=1"})')]),t._v(" 就会限制请求带的参数 id 只能为 1，如果带别的参数，或者不带参数都会报 HTTP 400 请求错误。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("headers")]),t._v(" 限制请求头。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("consumes")]),t._v(" 显示请求内容类型，即请求头中的 "),s("code",[t._v("Content-Type")]),t._v(" 值。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("produces")]),t._v(" 限制响应内容类型。")])])]),t._v(" "),s("p",[t._v("上面这些参数组合起来能控制请求的处理，举个例子")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RequestMapping")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("method "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RequestMethod")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("GET")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" path "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"requestMapping/get"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"requestMapping/get2"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" params "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"id=1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" headers "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Content-Type=application/json"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reqestMapping")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"request mapping"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 上面这个方法只能通过 curl 命令来请求")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" curl "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://localhost:8083/requestMapping/get?id=1"')]),t._v(" \\\n     "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("H")]),t._v(" '"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Content")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Type")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" application"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("json'\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" curl "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://localhost:8083/requestMapping/get2?id=1"')]),t._v(" \\\n     "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("H")]),t._v(" '"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Content")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Type")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" application"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("json'\n")])])]),s("blockquote",[s("p",[t._v("有一个name属性没有介绍，不过这个用的不多，经常用到的场景是用于文档生成。")])]),t._v(" "),s("h2",{attrs:{id:"getmapping"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getmapping"}},[t._v("#")]),t._v(" @GetMapping")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/bind/annotation/GetMapping.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("@GetMapping"),s("OutboundLink")],1),t._v(" 表示注释的方法对应的 HTTP 请求为 GET 请求。")]),t._v(" "),s("p",[t._v("本质上 "),s("code",[t._v("@GetMapping")]),t._v(" 是 "),s("code",[t._v("@RequestMapping(method = RequestMethod.GET)")]),t._v(" 的缩写形式。所以 "),s("code",[t._v("@GetMapping")]),t._v(" 也能复用 "),s("code",[t._v("@RequestMapping")]),t._v(" 的参数列表。")]),t._v(" "),s("h2",{attrs:{id:"postmapping"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#postmapping"}},[t._v("#")]),t._v(" @PostMapping")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/bind/annotation/PostMapping.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("@PostMapping"),s("OutboundLink")],1),t._v(" 表示注释的方法对应的 HTTP 请求为 POST 请求。")]),t._v(" "),s("p",[t._v("本质上 "),s("code",[t._v("@PostMapping")]),t._v(" 是 "),s("code",[t._v("@RequestMapping(method = RequestMethod.POST)")]),t._v(" 的缩写形式。具体使用方式可以参考 "),s("code",[t._v("@GetMapping")]),t._v("。")]),t._v(" "),s("h1",{attrs:{id:"参数相关注解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参数相关注解"}},[t._v("#")]),t._v(" 参数相关注解")]),t._v(" "),s("p",[t._v("说完了方法上的注解，接下来聊聊方法参数内的注解，比较常用就是")]),t._v(" "),s("h2",{attrs:{id:"requestparam"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#requestparam"}},[t._v("#")]),t._v(" @RequestParam")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/bind/annotation/RequestParam.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("@RequestParams"),s("OutboundLink")],1),t._v(" 这个注解表示Web 请求参数绑定到方法参数。")]),t._v(" "),s("p",[t._v("在 Spring MVC 中，请求参数可能是 query parameters(查询参数)、form data(表单数据)和 multipart requests 中的一个，所以这个参数不光能用在 GET 请求，也能用在 POST 请求中。")]),t._v(" "),s("p",[t._v("这个注解也有自己的参数设置，如下")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("name")]),t._v("。要绑定到的请求参数的名称，即如果真实方法参数名是 "),s("code",[t._v("pageNo")]),t._v("，你想要映射到的 HTTP 请求参数里的参数名是 "),s("code",[t._v("pageStart")]),t._v("，则可以用 "),s("code",[t._v("name")]),t._v(" 属性。例子如下")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("queryData")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RequestParam")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pageStart"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" pageNo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RequestParam")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" pageSize"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n上面这个方法对应的请求命令如下\ncurl "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://localhost:8083/get/params?pageSize=200&pageStart=1"')]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("required")]),t._v("。表示这个参数是否是必传的，这个注解参数经常会用到，比如用户登录的时候，用户名和密码这些都是必填的，我们可以通过这个参数来对 HTTP 请求参数进行验证。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("defaultValue")]),t._v("。当未提供请求参数或请求参数为空值时用作后备的默认值，如果提供了这个值，则会将 "),s("code",[t._v("required")]),t._v(" 参数设置为 false。")])])]),t._v(" "),s("p",[t._v('有的时候我们进行一些数据批量查询的时候，可能会传给服务器一个数组列表，比如 curl "'),s("a",{attrs:{href:"http://localhost:8083/get/paramArray?params=200,300,number,400",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://localhost:8083/get/paramArray?params=200,300,number,400"),s("OutboundLink")],1),t._v('"  这种命令，那应该怎么设计参数列表，才能接收这样的参数值呢？可以将参数设置为字符数组类型，如下')]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("queryParamArray")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RequestParam")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" params"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("我觉得最好是设置为字符串数组，因为足够通用，如果确保传过来的就是数字，则 "),s("code",[t._v("List<Integer>")]),t._v(" 类型也行，但如果不是的话，就可能报异常了。")])]),t._v(" "),s("p",[t._v("有的时候请求参数非常多，我们希望能将这些请求参数封装成一个类，怎么做？直接封装即可。例子如下")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 参数封装成类")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PageGetRequest")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" pageNo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" pageSize"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 直接将参数类型声明为对应类就 OK")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@GetMapping")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"get/paramModel"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("queryData")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PageGetRequest")]),t._v(" requestGetModel"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pageNo {}, pageSize {}"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" requestGetModel"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPageNo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" requestGetModel"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPageSize")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("注意上面的方法参数前面并没有加 "),s("code",[t._v("@RequestParam")]),t._v(" 注解，如果加上注解则会报错如下，目测是不支持的参数类型。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'requestGetModel' for method parameter type PageGetRequest is not present]\n")])])]),s("p",[s("code",[t._v("@RequestParam")]),t._v(" 有的时候并不是必须的，因为 Spring Boot 提供了自动参数解析的功能。Spring Boot 可以自动解析请求中的查询参数并将它们绑定到方法参数，如果HTTP 请求参数名和方法参数名保持一致的话，则无需显式使用 "),s("code",[t._v("@RequestParam")]),t._v(" 注解。这个规则不仅适用于 GET 请求，也适用于 POST 的表单请求。不过如果你想要 "),s("code",[t._v("@RequestParam")]),t._v(" 的别的参数，那还是要显式的去写注解。")]),t._v(" "),s("h2",{attrs:{id:"requestbody"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#requestbody"}},[t._v("#")]),t._v(" RequestBody")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/bind/annotation/RequestBody.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("@RequestBody"),s("OutboundLink")],1),t._v(" 表示方法参数应绑定到 HTTP 请求体 body。所以 @RequestBody 基本上不会用 GET 请求中。")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/bind/annotation/RequestBody.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("@RequestBody"),s("OutboundLink")],1),t._v(" 注解也有参数，不过比 "),s("code",[t._v("@RequestParam")]),t._v(" 参数少，只有一个 "),s("code",[t._v("required")]),t._v(" 参数，含义和 "),s("code",[t._v("@RequestParam")]),t._v(" 中的 "),s("code",[t._v("required")]),t._v(" 一样。")]),t._v(" "),s("p",[t._v("下面这个例子展示了使用 "),s("code",[t._v("application/json")]),t._v(" 做请求类型的 POST 请求的执行情况")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// curl 命令")]),t._v("\ncurl "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("X")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"POST"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://localhost:8083/post/json"')]),t._v(" \\\n     "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("H")]),t._v(" '"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Content")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Type")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" application"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("json"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" charset"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("utf"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v("' \\\n     "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("d $'"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fanthus"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("'\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// POST 请求")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@PostMapping")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"post/json"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("postJSON")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RequestBody")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" jsonStr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"content {}"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" jsonStr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 请求后方法打印内容")]),t._v("\ncontent "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fanthus"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("表单请求也类似，POST 请求方法不需要改变，只需要将请求命令替换为 POST 表单请求即可，但是"),s("strong",[t._v("如果参数类型不是字符串，而是对象的话，表单请求的参数不能使用 @RequestBody 去接。")]),t._v(" 否则报错 Unsupported Media Type..")])]),t._v(" "),s("p",[t._v("POST 请求体通常都会映射到一个对象，如果我们按照上面的写法，我们需要自己去进行字符串转对象的操作，但我们通常不会这么做，我们希望在方法里直接拿到 POST 请求后，直接拿到对象实例，这时候只需要将 POST 请求体封装成对象形式，然后直接接收就行，例子如下")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将请求体映射为对象")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PagePostRequest")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 参数类型替换")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@PostMapping")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"post/jsonModel"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("postJSONModel")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RequestBody")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PagePostRequest")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" jsonRequest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"request {}, name {}"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" jsonRequest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" jsonRequest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 请求内容不变，对应执行结果如下")]),t._v("\nrequest "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PagePostRequest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("fanthus"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name fanthus\n")])])]),s("h2",{attrs:{id:"requestparam-vs-requestbody"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#requestparam-vs-requestbody"}},[t._v("#")]),t._v(" @RequestParam VS @RequestBody")]),t._v(" "),s("p",[t._v("这两个注解比较容易混淆，我刚接触的时候就有点晕，不过想要区分也很简单。")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("@RequestBody")]),t._v(" 基本上是用于 "),s("code",[t._v("application/json")]),t._v(" 这种类型的 POST 请求的，因为它是将请求体绑定了方法参数。而且通常 "),s("code",[t._v("@RequestBody")]),t._v(" 附带的参数是个对象，因为它类型直接映射请求体会比较复杂。")]),t._v(" "),s("li",[s("code",[t._v("@RequestParam")]),t._v(" 是用户 GET 请求，附加表单和 multipart 的 POST 请求，"),s("strong",[t._v("不支持 "),s("code",[t._v("application/json")]),t._v(" 类型的 POST 请求。")])])]),t._v(" "),s("p",[t._v("我们实现的时候如果按照 "),s("code",[t._v("application/json")]),t._v("  类型POST 请求用 "),s("code",[t._v("@RequestBody")]),t._v(" ，其余请求用 "),s("code",[t._v("@RequestParam")]),t._v(" 则一般就不会出错。")]),t._v(" "),s("p",[t._v("大家如果觉得这部分我说的有问题，可以在评论里指出来。")]),t._v(" "),s("h2",{attrs:{id:"requestheader"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#requestheader"}},[t._v("#")]),t._v(" @RequestHeader")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/bind/annotation/RequestHeader.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("@RequestHeader"),s("OutboundLink")],1),t._v(" 是Spring MVC中的注解之一，用于从HTTP请求头中提取信息并将其绑定到方法参数。\n通常用法如下")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@GetMapping")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"get/requestHeader"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getRequestHeader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RequestHeader")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HashMap")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" header"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"getRequestHeader {}"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("header"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 执行请求命令")]),t._v("\ncurl "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://localhost:8083/get/requestHeader?pageSize=200&pageNo=1"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 打印结果如下")]),t._v("\ngetRequestHeader "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("host"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("localhost"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8083")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" connection"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("close"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" user"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("agent"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RapidAPI")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.2")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Macintosh")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("OS")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("X")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("13.6")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GCDHTTPRequest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"valid"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#valid"}},[t._v("#")]),t._v(" @Valid")]),t._v(" "),s("p",[t._v("这个注解也经常用到，主要是校验对象参数，它需要单独引入一个库，如下")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.springframework.boot"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("spring-boot-starter-validation"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("@Valid 主要是配合一些对象内部的属性修饰符使用，比如下面这个例子")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 请求内容")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ValidRequest")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@NotNull")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@AssertFalse")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" hasVote"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Min")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" voteNumber"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@NotBlank")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("message"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"原因不能为空"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" reason"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取数据")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@GetMapping")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"get/valid"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getValid")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Valid")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ValidRequest")]),t._v(" requst"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"request {}"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" requst"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 符合条件的请求")]),t._v("\ncurl "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://localhost:8083/get/valid?name=fanthus&hasVote=false&voteNumber=2&reason=hello"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 执行结果")]),t._v("\nrequest "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ValidRequest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("fanthus"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" hasVote"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" voteNumber"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" reason"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("hello"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("注意的是 @Valid 并不限制 GET 或者 POST 请求。上面的例子是 GET 请求，如果是 POST 请求的话，则方法如下")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@PostMapping")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"post/valid"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("postValid")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RequestBody")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Valid")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ValidRequest")]),t._v(" requst"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("注意 @Valid 不要和  @Validated 搞混。")])]),t._v(" "),s("p",[t._v("如果因为一些原因不能使用 "),s("code",[t._v("@RequestParam")]),t._v("，则使用 "),s("code",[t._v("@Valid+@NotNull")]),t._v(" 组合可以替代 "),s("code",[t._v("@RequestParam")]),t._v(" 中的 "),s("code",[t._v("required = true")]),t._v(" 的设置。")]),t._v(" "),s("h1",{attrs:{id:"end"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#end"}},[t._v("#")]),t._v(" End")]),t._v(" "),s("p",[t._v("以上就是我总结的一些 Spring 中 HTTP 相关注解的使用方法，只是从使用层面梳理了下，并没有深入到原理层，不过对于初学者应该够用了。")]),t._v(" "),s("p",[t._v("参考地址:")]),t._v(" "),s("ol",[s("li",[s("a",{attrs:{href:"https://cloud.tencent.com/developer/article/1624863",target:"_blank",rel:"noopener noreferrer"}},[t._v("@RestController vs @Controller"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://stackoverflow.com/questions/28039709/what-is-difference-between-requestbody-and-requestparam",target:"_blank",rel:"noopener noreferrer"}},[t._v("What is difference between @RequestBody and @RequestParam?"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://stackoverflow.com/questions/3595160/what-does-the-valid-annotation-indicate-in-spring",target:"_blank",rel:"noopener noreferrer"}},[t._v("What does the @Valid annotation indicate in Spring?"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://blog.csdn.net/minkeyto/article/details/105502423",target:"_blank",rel:"noopener noreferrer"}},[t._v("SpringBoot 中使用 @Valid 注解 + Exception 全局处理器优雅处理参数验证"),s("OutboundLink")],1)])]),t._v(" "),s("hr"),t._v(" "),s("p",[t._v("关注我的微信公众号，我在上面会分享我的日常所思所想。")]),t._v(" "),s("div",{attrs:{align:"center"}},[s("img",{attrs:{src:a(323),width:"40%/"}})]),t._v(" "),s("Vssue",{attrs:{title:"Spring中HTTP相关注解介绍"}})],1)}),[],!1,null,null,null);s.default=e.exports}}]);